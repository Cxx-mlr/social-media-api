name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - "3.8"
    environment:
      name: testing
    env:
      POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
      POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable caching
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "0.4.9"

      - name: Set up Python ${{ matrix.python_version }}
        run: uv python install ${{ matrix.python_version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run pytest tests